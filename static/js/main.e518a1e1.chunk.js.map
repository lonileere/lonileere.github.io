{"version":3,"sources":["components/navbar.component.jsx","components/thumbnail.component.jsx","components/projects.component.jsx","components/about.component.jsx","components/welcome.component.jsx","components/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["NavigationBar","Navbar","sticky","bg","expand","Brand","href","Toggle","className","aria-controls","Collapse","id","Nav","exact","to","Link","Thumbnail","props","Card","Img","variant","src","img","Body","Title","title","Text","description","Button","source","as","target","link","Projects","Row","Col","md","sm","About","Welcome","Footer","fixed","Container","icon","faGithub","size","faTwitter","faLinkedin","faFacebook","App","location","useLocation","transitions","useTransition","pathname","from","position","top","left","opacity","minHeight","transform","enter","leave","map","item","key","div","style","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e518a1e1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\n\nexport default function NavigationBar() {\n  return (\n    <Navbar sticky=\"top\" bg=\"white\" expand=\"sm\">\n      <Navbar.Brand href=\"/\">Leke Onile-ere</Navbar.Brand>\n      <Navbar.Toggle className=\"border-0\" aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"ml-auto\">\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>Home</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/about\">\n            <Nav.Link>About</Nav.Link>\n          </LinkContainer>\n          <LinkContainer to=\"/projects\">\n            <Nav.Link>Projects</Nav.Link>\n          </LinkContainer>\n          <LinkContainer exact to=\"/\">\n            <Nav.Link>Contact</Nav.Link>\n          </LinkContainer>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\n\nexport default function Thumbnail(props) {\n  return (\n    <div>\n      <Card className=\"mb-2 profile-card\">\n        <Card.Img variant=\"top\" src={props.img} />\n        <Card.Body>\n          <Card.Title>{props.title}</Card.Title>\n          <Card.Text>{props.description}</Card.Text>\n          <Button\n            href={props.source}\n            as=\"a\"\n            target=\"_blank\"\n            className=\"mr-2\"\n            variant=\"light\"\n          >\n            Source Code\n          </Button>\n          <Button as=\"a\" href={props.link} target=\"_blank\" variant=\"primary\">\n            Link to Project\n          </Button>\n        </Card.Body>\n      </Card>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Thumbnail from \"./thumbnail.component\";\nimport { Row, Col } from \"react-bootstrap\";\n\nexport default function Projects() {\n  return (\n    <div className=\"my-3\">\n      <Row>\n        <Col>\n          <h1 className=\"header-text\">Projects</h1>\n          <p>These are a few examples of my work</p>\n        </Col>\n      </Row>\n      <Row>\n        <Col md={4} sm={12}>\n          <Thumbnail\n            title=\"ThinkFit\"\n            img=\"\"\n            description=\"Web based fitness application created using the MEAN stack\"\n            source=\"\"\n            link=\"https://thinkfit.herokuapp.com\"\n          />\n        </Col>\n        <Col md={4} sm={12}>\n          <Thumbnail\n            title=\"Sample Project 2\"\n            img=\"\"\n            description=\"sample description\"\n            source=\"\"\n            link=\"\"\n          />\n        </Col>\n        <Col md={4} sm={12}>\n          <Thumbnail\n            title=\"Sample Project 3\"\n            img=\"\"\n            description=\"sample description\"\n            source=\"\"\n            link=\"\"\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"header-text\">About Me</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Jumbotron, Button } from \"react-bootstrap\";\n\nexport default function Welcome() {\n  return (\n    <div>\n      <div className=\"cover-inner\">\n        <h1 className=\"header-text\">Welcome</h1>\n        <p>\n          <Button variant=\"primary\">Learn more</Button>\n        </p>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Navbar, Nav, Container, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faGithub,\n  faTwitter,\n  faFacebook,\n  faLinkedin,\n} from \"@fortawesome/free-brands-svg-icons\";\n\nexport default function Footer() {\n  return (\n    <div>\n      <Navbar fixed=\"bottom\">\n        <Container>\n          <Nav className=\"ml-auto\">\n            <div className=\"social-bar\">\n              <a href=\"https://github.com/lonileere\" target=\"_blank\">\n                {\" \"}\n                <FontAwesomeIcon icon={faGithub} size=\"lg\" />{\" \"}\n              </a>\n              <a href=\"https://twitter.com/leekasaur\" target=\"_blank\">\n                {\" \"}\n                <FontAwesomeIcon icon={faTwitter} size=\"lg\" />{\" \"}\n              </a>\n              <a href=\"https://www.linkedin.com/in/lonileere/\" target=\"_blank\">\n                {\" \"}\n                <FontAwesomeIcon icon={faLinkedin} size=\"lg\" />{\" \"}\n              </a>\n              <a href=\"https://www.facebook.com/l.onileere/\" target=\"_blank\">\n                {\" \"}\n                <FontAwesomeIcon icon={faFacebook} size=\"lg\" />{\" \"}\n              </a>\n            </div>\n          </Nav>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n","/* eslint-disable react/jsx-filename-extension */\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { animated, useTransition } from \"react-spring\";\nimport { Container } from \"react-bootstrap\";\nimport Navbar from \"./components/navbar.component\";\nimport { Switch, Route, Link, useLocation } from \"react-router-dom\";\nimport Projects from \"./components/projects.component\";\nimport About from \"./components/about.component\";\nimport Welcome from \"./components/welcome.component\";\nimport Footer from \"./components/footer.component\";\n\nfunction App() {\n  const location = useLocation();\n  const transitions = useTransition(location, (location) => location.pathname, {\n    from: {\n      position: \"relative\",\n      top: 0,\n      left: 0,\n      opacity: 0,\n      minHeight: \"100vh\",\n      transform: \"translate3d(100%,0,0)\",\n    },\n    enter: { opacity: 1, transform: \"translate3d(0%,0,0)\" },\n    leave: { opacity: 0, transform: \"translate3d(-50%,0,0)\" },\n  });\n\n  return (\n    <Container>\n      <Navbar />\n      {transitions.map(({ item: location, props, key }) => (\n        <animated.div style={props} key={key}>\n          <Switch location={location}>\n            <Route path=\"/projects\" exact component={Projects} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/\" exact component={Welcome} />\n          </Switch>\n        </animated.div>\n      ))}\n      <Footer />\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}